pool:
  name: Rabo-Build-Azure-Windows-Preview
  
steps:
  - task: DotNetCoreInstaller@0
    displayName: 'Use .NET Core sdk 2.2.203'
    inputs:
      version: 2.2.203
    enabled: false

  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore
      vstsFeed: 'ea1adc59-f67e-40d5-8539-4c897a894647'

  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      arguments: '--configuration release'

  - task: CmdLine@2
    displayName: Create local MSSQLLocalDB and run AzureStorageEmulator (for Testing)
    inputs:
      script: |
        sqllocaldb create MSSQLLocalDB
        sqllocaldb start MSSQLLocalDB
        "C:\Program Files (x86)\Microsoft SDKs\Azure\Storage Emulator\AzureStorageEmulator.exe" start
      
  - task: DotNetCoreCLI@2
    displayName: Test
    inputs:
      command: test
      arguments: '--configuration release /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:Exclude="[xunit*]*"'

  - task: DotNetCoreCLI@2
    displayName: Publish
    inputs:
      command: publish
      publishWebProjects: false
      projects: '$(build.sourcesdirectory)/Functions/Functions.csproj'
      arguments: '--configuration release --output $(build.artifactstagingdirectory)'

  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(build.sourcesdirectory)/Scripts'
      Contents: '**'
      TargetFolder: '$(build.artifactstagingdirectory)/Scripts'

  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(build.sourcesdirectory)/Functions.Infra/bin/Release'
      Contents: '**'
      TargetFolder: '$(build.artifactstagingdirectory)/Infra'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'
      ArtifactName: 'vsts-webhook-function'

  - script: |
      dotnet tool install dotnet-reportgenerator-globaltool --tool-path tools --ignore-failed-sources
      dir
      cd tools
      dir
      reportgenerator -reports:"OpenCover.xml" -reporttypes:"HtmlInline_AzurePipelines;cobertura" -targetDir:reports
      cd $(Build.SourcesDirectory)/reports
      dir
    displayName: Generate code coverage reports
    condition: succeededOrFailed()

  - task: PublishCodeCoverageResults@1
    inputs:
      summaryFileLocation: $(Build.SourcesDirectory)/reports/Cobertura.xml
      reportDirectory: $(Build.SourcesDirectory)/reports
      codecoverageTool: cobertura
    condition: succeededOrFailed()